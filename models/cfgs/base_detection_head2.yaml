
channel_multiple: 1.0

nc: 91
# output channel: (nc), (4(bbox) + 1(conf))

strides:
  # Used with anchors for output bbox
  [32, 16, 8]

anchors:
  - [116,90, 156,198, 373,326]  # /32
  - [30,61, 62,45, 59,119]  # /16
  - [10,13, 16,30, 33,23]  # /8

expected_input_shape:
  - [384, 52, 52]
  - [512, 26, 26]
  - [768, 13, 13]

bbox_architecture:
  # [layer_idx, iter, module, args]
  [
    [ PWConv, [ 768, 256 ] ],
    [ Upsample, [ None, 4, "nearest", -1 ] ],
    [ GetLayer, [ -4 ] ],
    [ PWConv, [ 512, 256 ] ],
    [ Upsample, [ None, 2, "nearest", -1 ] ],
    [ ConcatLayer, [ 1, [ -1, -4, -8 ] ] ],
    [Downsample, [3, -1, 2]],
    [BottleneckCSP, [896, 768, 2, 0.5, False, False]],
    [Bottleneck, [768, 5, 3, 1, nn.Sigmoid()]]
  ]

cls_architecture:
  # [module, args]
  [
    [ PWConv, [ 768, 256 ] ],
    [ Upsample, [ None, 4, "nearest", -1 ] ],
    [ GetLayer, [ -4 ] ],
    [ PWConv, [ 512, 256 ] ],
    [ Upsample, [ None, 2, "nearest", -1 ] ],
    [ ConcatLayer, [ 1, [ -1, -4, -8 ] ] ],
    [ Downsample, [ 3, -1, 2 ] ],
    [ BottleneckCSP, [ 896, 768, 2, 0.5, False, False ] ],
    [ Bottleneck, [ 768, 91, 3, 1, nn.Softmax(dim=1) ] ]
  ]